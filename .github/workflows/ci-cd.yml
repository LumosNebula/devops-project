name: CI-CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_REPO: 192.168.86.75:80/library/myapp

jobs:
  build-and-deploy:
    runs-on: [self-hosted, linux, docker]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Configure git for pushes
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Python venv and unit tests
        shell: bash
        run: |
          set -euo pipefail
          if command -v python3 >/dev/null 2>&1; then
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            if [ -f apps/myapp/requirements.txt ]; then
              pip install -r apps/myapp/requirements.txt
            fi
            python -m unittest discover || true
          fi

      - name: Docker login to Harbor
        env:
          HARBOR_USER: ${{ secrets.HARBOR_USER }}
          HARBOR_PASS: ${{ secrets.HARBOR_PASS }}
        run: |
          set -euo pipefail
          if [ -z "${HARBOR_USER:-}" ] || [ -z "${HARBOR_PASS:-}" ]; then
            echo "HARBOR_USER or HARBOR_PASS not provided"
            exit 1
          fi
          echo "$HARBOR_PASS" | docker login 192.168.86.75:80 -u "$HARBOR_USER" --password-stdin

      - name: Build and push Docker image
        env:
          IMAGE_REPO: ${{ env.IMAGE_REPO }}
        run: |
          set -euo pipefail
          IMAGE_TAG=$(git rev-parse --short=8 HEAD)
          docker build -t ${IMAGE_REPO}:${IMAGE_TAG} -f apps/myapp/Dockerfile apps/myapp
          docker push ${IMAGE_REPO}:${IMAGE_TAG}
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Update Helm chart values and push to repo
        if: ${{ secrets.CI_GIT_TOKEN != '' }}
        run: |
          set -euo pipefail
          IMAGE_TAG=${{ env.IMAGE_TAG }}
          sed -i "s|tag: .*|tag: ${IMAGE_TAG}|" charts/myapp/values.yaml
          git add charts/myapp/values.yaml
          git commit -m "Update Helm chart image tag to ${IMAGE_TAG}" || true
          git push https://x-access-token:${{ secrets.CI_GIT_TOKEN }}@github.com/${{ github.repository }} HEAD:main

      - name: Trigger ArgoCD sync
        if: ${{ secrets.ARGOCD_TOKEN != '' && secrets.ARGOCD_SERVER != '' }}
        run: |
          set -euo pipefail
          APP_NAME="myapp"
          ARGO_SERVER="${{ secrets.ARGOCD_SERVER }}"
          ARGO_TOKEN="${{ secrets.ARGOCD_TOKEN }}"
          curl -k -s -H "Authorization: Bearer ${ARGO_TOKEN}" -X POST "https://${ARGO_SERVER}/api/v1/applications/${APP_NAME}/sync" || true

      - name: Wait for Kubernetes deployment ready
        if: ${{ secrets.KUBECONFIG != '' }}
        env:
          KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG }}
        run: |
          set -euo pipefail
          mkdir -p ~/.kube
          echo "$KUBECONFIG_CONTENT" > ~/.kube/config
          kubectl -n default rollout status deployment/myapp --timeout=120s || true

      - name: HTTP smoke test
        run: |
          set -euo pipefail
          sleep 5
          curl -fsS http://myapp.default.svc.cluster.local:8080/health || true
